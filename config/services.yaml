# config/services.yaml

parameters:

services:
    _defaults:
        autowire: true      # Automatically inject dependencies
        autoconfigure: true # Automatically register as commands, event subscribers, etc.

    # Load everything else automatically (except excluded dirs)
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Kernel.php'

    # ========================================
    # DOMAIN LAYER - Pure business logic
    # ========================================

    # ========================================
    # APPLICATION LAYER - Use Cases
    # ========================================
    App\Application\UseCase\:
        resource: '../src/Application/UseCase/*'

    # ========================================
    # INFRASTRUCTURE LAYER - Technical details
    # ========================================

    # Bind domain repository interface to infrastructure implementation
    App\Domain\User\Repository\UserRepositoryInterface: '@App\Infrastructure\Persistence\DoctrineUserRepository'

    # Exception handling
    App\Infrastructure\Exception\GlobalExceptionHandler:
        tags: 
            - { name: 'kernel.event_listener', event: 'kernel.exception', method: 'onKernelException' }

    # ========================================
    # UI LAYER - Controllers and CLI
    # ========================================

    # API Controllers
    App\UI\Api\:
        resource: '../src/UI/Api/*'

    # ========================================
    # EVENT LISTENERS
    # ========================================
    App\Infrastructure\Event\Listener\:
        resource: '../src/Infrastructure/Event/Listener/*'

    # ========================================
    # CUSTOM SERVICES
    # ========================================

    # Logger avec canal personnalisé pour les événements du domaine
    domain_events.logger:
        parent: monolog.logger
        arguments: ['domain_events']

    # Logger pour l'API
    api.logger:
        parent: monolog.logger
        arguments: ['api']
